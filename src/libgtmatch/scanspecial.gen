/*
  Copyright (c) 2007 Stefan Kurtz <kurtz@zbh.uni-hamburg.de>
  Copyright (c) 2007 Center for Bioinformatics, University of Hamburg
  See LICENSE file or http://genometools.org/license.html for license details.
*/

{
  Uchar cc;
  Seqpos pos;
  int retval;
  Seqpos currentspecialchar = 0;
  Bitstring bitwise = 0;
  Uchar lastspeciallength = 0;
#ifndef NOENDPTR
  Seqpos *endptrUint, endspecialcells;
  Seqpos nextcheck;
#endif
  DECLARESEQBUFFER(encseq->fourcharsinonebyte);

  ALLOCASSIGNSPACE(ACCESSENCSEQ(encseq,specialpositions),NULL,SPECIALTYPE,
                   encseq->numofspecialstostore);
  ALLOCASSIGNSPACE(encseq->specialrangelength,NULL,Uchar,
                   encseq->numofspecialstostore);
#ifndef NOENDPTR
  endspecialcells = (Seqpos) (encseq->totallength/MAXSPECIALTYPE + 1);
  ALLOCASSIGNSPACE(ACCESSENCSEQ(encseq,endspecialsubsUint),NULL,uintptr_t,
                   (size_t) endspecialcells);
  nextcheck = (Seqpos) MAXSPECIALTYPE;
  endptrUint = ACCESSENCSEQ(encseq,endspecialsubsUint);
#endif

  for (pos=0; /* Nothing */; pos++)
  {
    retval = readnextUchar(&cc,fbs,env);
    if (retval < 0)
    {
      return -1;
    }
    if (retval == 0)
    {
      if (lastspeciallength > 0)
      {
	encseq->specialrangelength[currentspecialchar-1] = lastspeciallength;
      }
      break;
    }
    if (ISSPECIAL(cc))
    {
      if (lastspeciallength == 0)
      {
	ACCESSENCSEQ(encseq,specialpositions)[currentspecialchar++]
#ifndef NOENDPTR
	  = (SPECIALTYPE) (pos & MAXSPECIALTYPE);
#else
          = pos;
#endif
	lastspeciallength = (Uchar) 1;
      } else
      {
	if (lastspeciallength == (Uchar) (UCHAR_MAX-1))
	{
	  encseq->specialrangelength[currentspecialchar-1]
	    = (Uchar) UCHAR_MAX;
	  lastspeciallength = 0;
	} else
	{
	  lastspeciallength++;
	}
      }
    } else
    {
      if (lastspeciallength > 0)
      {
	encseq->specialrangelength[currentspecialchar-1] = lastspeciallength;
	lastspeciallength = 0;
      }
    }
#ifndef NOENDPTR
    if (pos == nextcheck)
    {
      *endptrUint++ = currentspecialchar;
      nextcheck += (Seqpos) (MAXSPECIALTYPE+1);
    }
#endif
    UPDATESEQBUFFER(encseq->fourcharsinonebyte,cc);
  }
  UPDATESEQBUFFERFINAL(encseq->fourcharsinonebyte);
#ifndef NOENDPTR
  while (endptrUint < ACCESSENCSEQ(encseq,endspecialsubsUint) + endspecialcells)
  {
    *endptrUint++ = currentspecialchar;
  }
#endif
  return 0;
}
