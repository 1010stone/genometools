dnl Copyright (C) 2007 Thomas Jahns <Thomas.Jahns@gmx.net>
dnl  
dnl This program is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2 of the License, or
dnl (at your option) any later version.
dnl  
dnl This program is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.
dnl  
dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
dnl  
dnl  
dnl As a special exception to the GNU General Public License, if you
dnl distribute this file as part of a program that contains a configuration
dnl script generated by Autoconf, you may include it under the same
dnl distribution terms that you use for the rest of that program.
dnl  
dnl No. 1 initialize autotools
AC_INIT([biofmi2],[0.0.1],[Thomas.Jahns@gmx.net])
AC_PREREQ(2.52)
AC_CONFIG_SRCDIR([src/blockcomp.c])
AM_CONFIG_HEADER([include/config.h])
AM_INIT_AUTOMAKE
dnl No. 2 check for programs that are required for successful build
dnl   c compiler
AC_PROG_CC
dnl   needed for static libraries
AC_PROG_RANLIB
dnl   installer
AC_PROG_INSTALL
dnl No 3 Check for libraries
dnl AC_CHECK_LIB([png], [png_write_row],,
dnl        [AC_MSG_ERROR([mpi-swirl depends on libpng])])
dnl AC_SYS_LARGEFILE must be called before other type checks, because
dnl it switches the API on some platforms (e.g. off_t becomes long long)
AC_SYS_LARGEFILE
AC_CHECK_LIB([gtcore], [str_new],,
        [AC_MSG_ERROR([biofmi2 depends on libgtcore])])
AC_CHECK_LIB([gtmatch], [mapsuffixarray],,
        [AC_MSG_ERROR([biofmi2 depends on libgtmatch])])
AC_CHECK_LIB([pcdr], [PCDRFileStreamNew],,
        [AC_MSG_ERROR([biofmi2 depends on libpcdr])])
dnl No 4 Check for header files
dnl   std c headers, this information should be used later
AC_HEADER_STDC
dnl   and do the same for some special cases
AC_CHECK_HEADERS(unistd.h stdint.h inttypes.h sys/types.h)
dnl ensure portable use of inline
AC_C_INLINE
AM_CONDITIONAL(TJ_NO_INLINE, test x$ac_cv_c_inline = xno)
if test x$ac_cv_c_inline != xno
then
        AC_DEFINE([HAVE_WORKING_INLINE],,
                  [used for code that acts different in environments 
                   with working function inlining])
        AC_DEFINE([staticifinline],[static],
                  [used for code that acts different in environments 
                   with working function inlining])
else
        AC_DEFINE([staticifinline],,
                  [used for code that acts different in environments 
                   with working function inlining])
fi
dnl No 5 Check for types
AC_TYPE_SIZE_T
AC_TYPE_INT8_T
AC_TYPE_UINT8_T
AC_TYPE_INT16_T
AC_TYPE_UINT16_T
AC_TYPE_INT32_T
AC_TYPE_UINT32_T
AC_TYPE_INT64_T
AC_TYPE_UINT64_T
AC_TYPE_LONG_LONG_INT
AC_TYPE_UNSIGNED_LONG_LONG_INT
dnl TJ_FIND_INTEGRAL_TYPE(size_t, type_of_size_t, [
dnl #include <sys/types.h>
dnl ])
AC_TYPE_OFF_T
TJ_C_LONG_LONG
TJ_C_64BIT
dnl FIXME: check for 64bit type existance here
dnl No 6 Check for structures
dnl No 7 Check for compiler characteristics
dnl No 8 Check for library functions
dnl AC_GETTIMEOFDAY_ARGS
dnl AC_CHECK_FUNCS(select)
dnl No 9 Check for system services
dnl AC_PATH_XTRA
dnl # X11 is obligatory for this program
dnl if test "$have_x" != yes; then
dnl   AC_MSG_ERROR([Couldn't find X11 headers/libs.  Try \`$0 --help'.])
dnl fi
dnl Check for additional X11 components
dnl TJ_CHECK_XMU
dnl TJ_CHECK_XSHM_EXT
dnl No 10 Create configuration files and Makefiles
AC_OUTPUT([Doxyfile Makefile src/Makefile t/Makefile bench/Makefile])
